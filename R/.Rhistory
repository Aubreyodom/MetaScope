bam_file <- "~/Downloads/Sample_P001-AS001.filtered.bam"
message("Reading .bam file: ", bam_file)
reads <- Rsamtools::scanBam(bam_file,
param = Rsamtools::ScanBamParam(what = c("qname",
"rname")))
reads
unmapped <- is.na(reads[[1]]$rname)
unmapped
mapped_qname <- reads[[1]]$qname[!unmapped]
mapped_rname <- reads[[1]]$rname[!unmapped]
read_names <- unique(mapped_qname)
accessions <- unique(mapped_rname)
message("\tFound ", length(read_names), " reads aligned to ",
length(accessions), " NCBI accessions")
accessions
length(read_names)
length(accessions)
length(mapped_qname)
length(mapped_rname)
mapped_qname_all<-mapped_qname
mapped_rname_all<-mapped_rname
mapped_rname<-mapped_rname[1:500]
mapped_qname<-mapped_qname[1:500]
read_names <- unique(mapped_qname)
accessions <- unique(mapped_rname)
message("\tFound ", length(read_names), " reads aligned to ",
length(accessions), " NCBI accessions")
message("Obtaining taxonomy and genome names")
suppressMessages(tax_id_all <- taxize::genbank2uid(id = accessions))
taxids <- sapply(tax_id_all, function(x) x[1])
unique_taxids <- unique(taxids)
taxid_inds <- match(taxids, unique_taxids)
genome_names <- sapply(tax_id_all, function(x) attr(x, "name"))
unique_genome_names <- genome_names[taxid_inds]
message("\tFound ", length(unique_taxids), " unique NCBI taxonomy IDs")
message("Setting up the EM algorithm")
qname_inds <- match(mapped_qname, read_names)
qname_inds
mapped_qname
read_names
rname_inds <- match(mapped_rname, accessions)
rname_inds
mapped_rname
qname_inds
mapped_qname
Rsamtools::asSam(bam_file)
rname_tax_inds <- taxid_inds[rname_inds]
rname_tax_inds
rname_inds
qname_inds
qname_inds
table(qname_inds)
1:max(rname_tax_inds)
gammas <- rep(1, length(rname_tax_inds))
length(gammas)
pi_fun <- function(x, gammas, rname_tax_inds){ mean(gammas[rname_tax_inds == x]) }
lappy(1:max(rname_tax_inds), pi_fun, gammas, rname_tax_inds)
pi_fun <- function(x, gammas, rname_tax_inds){ mean(gammas[rname_tax_inds == x]) }
sapply(1:max(rname_tax_inds), pi_fun, gammas, rname_tax_inds)
qname_inds
qname_inds
