% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_host.R
\name{filter_host}
\alias{filter_host}
\title{Align reads against one or more filter libraries and subsequently
remove mapped reads}
\usage{
filter_host(
  reads_bam,
  libs,
  output = paste(tools::file_path_sans_ext(reads_bam), "filtered", "bam", sep = "."),
  settings = align_details
)
}
\arguments{
\item{reads_bam}{The name of a merged, sorted .bam file that has previously
been aligned to a reference library. Likely, the output from running an
instance of `align_target()`}

\item{libs}{A vector of character strings giving the basenames of the
Subread index files for alignment. These should be located in the current
directory.}

\item{output}{The desired name of the output .bam file. Default is
the basename of `reads_bam` + `.filtered.bam`}

\item{settings}{A named `list` specifying alignment parameters for
the `Rsubread::align()` function, which is called inside `align_target()`.
Elements should include type, nthreads, maxMismatches, nsubreads,
phredOffset, unique, and nBestLocations. Descriptions of these parameters
are available under `?Rsubread::align`. Defaults to the global
`align_details` object.}
}
\value{
The name of a filtered, sorted .bam file written to the user's
current working directory.
}
\description{
After a sample is aligned to a target library with `align_target()`,
we may use `filter_host()` to remove unwelcome host contamination using
filter reference libraries. This function takes as input the name
of the .bam file produced via `align_target()`, and produces a
sorted .bam file with any reads that match the filter libraries removed.
This resulting .bam file may be used upstream for further analysis.
}
\examples{
# How to get previous BAM file??? Rerun code? Or include it?
# Create an index for filter libraries
# filter

}
